apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.alibaba.arouter'
apply plugin: 'kotlin-kapt'

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        //applicationId "com.paipaiwei.personal"
        applicationId "com.paipaiwei.personal"
        flavorDimensions "default"
        minSdkVersion 19
        targetSdkVersion 28

        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }


        packagingOptions {
            exclude 'META-INF/proguard/androidx-annotations.pro'
        }




        configurations.all {
            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                def requested = details.requested
                if (requested.group == 'com.android.support') {
                    if (!requested.name.startsWith("multidex")) {
                        details.useVersion '28.0.0'
                    }
                }
            }
        }

        /*javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
            }
        }*/


    }

    // 签名配置
    signingConfigs {
        release {
            //D:\develop\ppwcustomer\app\keystore\release.jks
            try {
                storeFile file("D:\\develop\\ppwcustomer\\app\\keystore\\release.jks")
                storePassword "123456"
                keyAlias "123456"
                keyPassword "123456"
            } catch (ex) {
//                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug {
            // storeFile file("./keystore/debug.keystore")
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }



    productFlavors {

        company {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "company"]
        }
        _360 {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "_360"]
        }

        yingyongbao {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "yingyongbao"]
        }
        wandoujia {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        xiaomi {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "xiaomi"]
        }

        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "huawei"]
        }

        vo {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "vo"]
        }

        ali {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "ali"]
        }

        baidu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "baidu"]
        }

        meizu {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "meizu"]
        }


    }


}

dependencies {


    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    //Android Support
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.1.0-alpha01'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'








    kapt 'com.alibaba:arouter-compiler:1.2.1'
    implementation project(':lib-zxing')
    api 'androidx.room:room-runtime:2.1.0-alpha03'
    kapt 'androidx.room:room-compiler:2.1.0-alpha03'
    implementation project(':module_restaurant')

}
